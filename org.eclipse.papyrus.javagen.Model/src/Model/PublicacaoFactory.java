// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package Model;

import java.util.NoSuchElementException;
import java.util.StringTokenizer;

public class PublicacaoFactory implements PublicacaoFactoryInterface {
	
	private static final String LIVRO = "L";
	private static final String PUBLICACAOPERIODICA = "PP";
	private static final String OBRAREFERENCIA = "OR";
	
	public PublicacaoFactory() {
		
	}

	public Publicacao getProxPub(String orderLine) {
		StringTokenizer tokenizer;
        tokenizer = new StringTokenizer(orderLine, ",");
        
        try
        {
            // Construct an instance of a class which implements Publicacao
            String orderLineType = tokenizer.nextToken();
            if (orderLineType.equals(LIVRO))
            {
                return registarLivro(tokenizer);
            }
            else if (orderLineType.equals(PUBLICACAOPERIODICA))
            {
                return registarPublicacaoPeriodica(tokenizer);
            }
             else if (orderLineType.equals(OBRAREFERENCIA))
            {
                return registarObraReferencia(tokenizer);
            }
            else
            {
                System.out.println("Unknown item type");
                return null;
            }
        }
        catch (Exception e)
        {
            System.out.println("an error occurred: " + e.toString());
            return null;
        }
	}

	private Publicacao registarObraReferencia(StringTokenizer tok)throws NoSuchElementException {//Este método cria as string que vão para o construtor da 
																								 //ObraReferencia com tokenizer
		String Titulo = tok.nextToken();
		String Autor = tok.nextToken();
		String Editor = tok.nextToken();
		String Tipo = tok.nextToken();
		return new ObraReferencia(Titulo, Autor, Editor, Tipo);
	}

	private Publicacao registarPublicacaoPeriodica(StringTokenizer tok)throws NoSuchElementException {//Este método cria as string que vão para o construtor da 
		 																							  //PublicacaoPeriodica com tokenizer
		String Titulo = tok.nextToken();
		String Autor = tok.nextToken();
		String Editor = tok.nextToken();
		String Tipo = tok.nextToken();
		String DataRepublicacao = tok.nextToken();
		return new PublicacaoPeriodica(Titulo, Autor, Editor, Tipo, DataRepublicacao);
	}

	private Publicacao registarLivro(StringTokenizer tok)throws NoSuchElementException {//Este método cria as string que vão para o construtor da 
																						//Livro com tokenizer
		String Titulo = tok.nextToken();
		String Autor = tok.nextToken();
		String Editor = tok.nextToken();
		String Tipo = tok.nextToken();
		String ISBN = tok.nextToken();
		return new Livro(Titulo, Autor, Editor, Tipo, ISBN);
	}

};

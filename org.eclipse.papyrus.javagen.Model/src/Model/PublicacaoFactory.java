// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package Model;

import java.util.NoSuchElementException;
import java.util.StringTokenizer;

public class PublicacaoFactory implements PublicacaoFactoryInterface {
	
	private static final String LIVRO = "L";
	private static final String PUBLICACAOPERIODICA = "PP";
	private static final String OBRAREFERENCIA = "OR";
	
	public PublicacaoFactory() {
		
	}

	public Publicacao getProxPub(String orderLine) {
		StringTokenizer tokenizer;
        tokenizer = new StringTokenizer(orderLine, ",");
        
        try
        {
            // Construct an instance of a class which implements Item
            String orderLineType = tokenizer.nextToken();
            if (orderLineType.equals(LIVRO))
            {
                return registarLivro(tokenizer);
            }
            else if (orderLineType.equals(PUBLICACAOPERIODICA))
            {
                return registarPublicacaoPeriodica(tokenizer);
            }
             else if (orderLineType.equals(OBRAREFERENCIA))
            {
                return registarObraReferencia(tokenizer);
            }
            else
            {
                System.out.println("Unknown item type");
                return null;
            }
        }
        catch (Exception e)
        {
            System.out.println("an error occurred: " + e.toString());
            return null;
        }
	}

	private Publicacao registarObraReferencia(StringTokenizer tok)throws NoSuchElementException {
		String Titulo = tok.nextToken();
		String Autor = tok.nextToken();
		String Editor = tok.nextToken();
		String Tipo = tok.nextToken();
		return new ObraReferencia(Titulo, Autor, Editor, Tipo);
	}

	private Publicacao registarPublicacaoPeriodica(StringTokenizer tok)throws NoSuchElementException {
		String Titulo = tok.nextToken();
		String Autor = tok.nextToken();
		String Editor = tok.nextToken();
		String Tipo = tok.nextToken();
		String DataRepublicacao = tok.nextToken();
		return new PublicacaoPeriodica(Titulo, Autor, Editor, Tipo, DataRepublicacao);
	}

	private Publicacao registarLivro(StringTokenizer tok)throws NoSuchElementException {
		String Titulo = tok.nextToken();
		String Autor = tok.nextToken();
		String Editor = tok.nextToken();
		String Tipo = tok.nextToken();
		String ISBN = tok.nextToken();
		return new Livro(Titulo, Autor, Editor, Tipo, ISBN);
	}

	
	public int pesquisarLivro(String l) {
		StringTokenizer tokenizer;
        tokenizer = new StringTokenizer(l, ",");
		if (l.equals(LIVRO))
		{
			return 1;
		}
        System.out.println("So pode ser requisitados livros");
		return 0;
	}
};
